<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" 
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans    
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.springframework.org/schema/context    
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">
 
 <!-- 对包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.fujie">
		<context:include-filter type="regex"
			expression=".service.impl" />
		<context:include-filter type="regex"
			expression=".utils.context" />	
		<context:include-filter type="regex"
			expression=".manager" />
	</context:component-scan>
        

       <!-- 指定数据库配置文件地址 -->
   <bean id="ssmpropertyConfigure" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:ssm-jdbc.properties</value>
            </list>
        </property>
    </bean>
	    
    <!-- 基本属性配置 alibaba数据连接池 -->
    <bean id="ssmdataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		 <!-- 基本属性 url、user、password -->
		<property name="url"             value="${ssm.jdbc.url}" />
		<property name="username"        value="${ssm.jdbc.username}" />
		<property name="password"        value="${ssm.jdbc.password}" />
		 <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="${ssm.jdbc.initialSize}" />
      <property name="minIdle" value="${ssm.jdbc.minIdle}" /> 
      <property name="maxActive" value="${ssm.jdbc.maxActive}" />

      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="${ssm.jdbc.maxWait}" />

      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="${ssm.jdbc.timeBetweenEvictionRunsMillis}" />
      
      <property name="removeAbandoned" value="${ssm.jdbc.removeAbandoned}"/><!-- 打开removeAbandoned功能 -->
      <property name="removeAbandonedTimeout" value="${ssm.jdbc.removeAbandonedTimeout}"/> <!-- 1800秒，也就是30分钟 -->
   	 <property name="logAbandoned" value="${ssm.jdbc.logAbandoned}" /> <!-- 关闭abanded连接时输出错误日志 -->

      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="${ssm.jdbc.minEvictableIdleTimeMillis}" />

      <property name="validationQuery" value="SELECT 1 from dual" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />

      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      <property name="poolPreparedStatements" value="true" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="mergeStat,log4j" />
    </bean>
   <!-- 开启注解式事务 -->
   <tx:annotation-driven transaction-manager="transactionManager"/>  
  <!-- MyBatis 动态实现 mapper 扫描配置 -->
	<bean id="ssmsqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="configLocation" value="classpath:config/mybatis-config.xml" />
			<property name="dataSource" ref="ssmdataSource" />
			<property name="mapperLocations">
				<list>
					<value>
						classpath:com/fujie/dao/sqlmapper/*.xml
					</value>
				</list>
			</property>
		</bean>

	<!-- MyBatis 采用动态扫描的方式，只需指定Mapper存放的目录，不需为每个Mapper配置代理工厂 -->
    <bean  id="mapperScannerConfigurer"  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <!-- 对Dao 接口动态实现，需要知道接口在哪  -->
        <property name="basePackage" value="com.fujie.dao.mapper" />
        <property name="sqlSessionFactoryBeanName" value="ssmsqlSessionFactory" />
    </bean>

</beans>